
; ---------------
; Symbol Export
; (autogenerated)
; ---------------

incsrc wram_symbols.asm

; ---------
; Work RAM
; ---------

ram_tilemap_buffer = !ram_tilemap_buffer ; $7E5800

; These variables are NOT PERSISTENT across savestates --
; they're saved and reloaded along with the game state.
; Use this section for infohud variables that are dependent
; on the game state. For variables that depend on user
; settings, place them below WRAM_PERSIST_START below.

ram_custom_preset = !ram_custom_preset ; !WRAM_START+$7A
ram_auto_save_state = !ram_auto_save_state ; !WRAM_START+$7C

; ^ FREE SPACE ^ up to +$7E

; ----------------------------------------------------------
; Variables below this point are PERSISTENT -- they maintain
; their value across savestates. Use this section for
; variables such as user settings that do not depend on the
; current game state.

ram_override_grey_door_close = !ram_override_grey_door_close ; !WRAM_PERSIST_START+$52
ram_sprite_feature_flags = !ram_sprite_feature_flags ; !WRAM_PERSIST_START+$54
ram_door_portals_enabled = !ram_door_portals_enabled ; !WRAM_PERSIST_START+$56
ram_door_portal_left = !ram_door_portal_left ; !WRAM_PERSIST_START+$58
ram_door_portal_right = !ram_door_portal_right ; !WRAM_PERSIST_START+$5A
ram_door_portal_up = !ram_door_portal_up ; !WRAM_PERSIST_START+$5C
ram_door_portal_down = !ram_door_portal_down ; !WRAM_PERSIST_START+$5E

; ^ FREE SPACE ^ up to +$7E

; ---------
; RAM Menu
; ---------

ram_cm_stack_index = !ram_cm_stack_index ; $05D5
ram_cm_menu_stack = !ram_cm_menu_stack ; !WRAM_MENU_START+$00         ; 16 bytes
ram_cm_cursor_stack = !ram_cm_cursor_stack ; !WRAM_MENU_START+$10       ; 16 bytes

ram_cm_cursor_max = !ram_cm_cursor_max ; !WRAM_MENU_START+$20
ram_cm_horizontal_cursor = !ram_cm_horizontal_cursor ; !WRAM_MENU_START+$22
ram_cm_input_timer = !ram_cm_input_timer ; !WRAM_MENU_START+$24
ram_cm_controller = !ram_cm_controller ; !WRAM_MENU_START+$26
ram_cm_menu_bank = !ram_cm_menu_bank ; !WRAM_MENU_START+$28

ram_cm_etanks = !ram_cm_etanks ; !WRAM_MENU_START+$2A
ram_cm_reserve = !ram_cm_reserve ; !WRAM_MENU_START+$2C
ram_cm_leave = !ram_cm_leave ; !WRAM_MENU_START+$2E
ram_cm_input_counter = !ram_cm_input_counter ; !WRAM_MENU_START+$30
ram_cm_last_nmi_counter = !ram_cm_last_nmi_counter ; !WRAM_MENU_START+$32

ram_cm_ctrl_mode = !ram_cm_ctrl_mode ; !WRAM_MENU_START+$34
ram_cm_ctrl_timer = !ram_cm_ctrl_timer ; !WRAM_MENU_START+$36
ram_cm_ctrl_last_input = !ram_cm_ctrl_last_input ; !WRAM_MENU_START+$38
ram_cm_ctrl_assign = !ram_cm_ctrl_assign ; !WRAM_MENU_START+$3A
ram_cm_ctrl_swap = !ram_cm_ctrl_swap ; !WRAM_MENU_START+$3C

ram_cm_palette_border = !ram_cm_palette_border ; !WRAM_MENU_START+$3E
ram_cm_palette_headeroutline = !ram_cm_palette_headeroutline ; !WRAM_MENU_START+$40
ram_cm_palette_text = !ram_cm_palette_text ; !WRAM_MENU_START+$42
ram_cm_palette_background = !ram_cm_palette_background ; !WRAM_MENU_START+$44
ram_cm_palette_numoutline = !ram_cm_palette_numoutline ; !WRAM_MENU_START+$46
ram_cm_palette_numfill = !ram_cm_palette_numfill ; !WRAM_MENU_START+$48
ram_cm_palette_toggleon = !ram_cm_palette_toggleon ; !WRAM_MENU_START+$4A
ram_cm_palette_seltext = !ram_cm_palette_seltext ; !WRAM_MENU_START+$4C
ram_cm_palette_seltextbg = !ram_cm_palette_seltextbg ; !WRAM_MENU_START+$4E
ram_cm_palette_numseloutline = !ram_cm_palette_numseloutline ; !WRAM_MENU_START+$50
ram_cm_palette_numsel = !ram_cm_palette_numsel ; !WRAM_MENU_START+$52
ram_cm_custom_preset_labels = !ram_cm_custom_preset_labels ; !WRAM_MENU_START+$54

ram_cm_door_menu_value = !ram_cm_door_menu_value ; !WRAM_MENU_START+$72
ram_cm_door_menu_bank = !ram_cm_door_menu_bank ; !WRAM_MENU_START+$74
ram_cm_door_direction_index = !ram_cm_door_direction_index ; !WRAM_MENU_START+$76

ram_cm_varia = !ram_cm_varia ; !WRAM_MENU_START+$80
ram_cm_gravity = !ram_cm_gravity ; !WRAM_MENU_START+$82
ram_cm_morph = !ram_cm_morph ; !WRAM_MENU_START+$84
ram_cm_bombs = !ram_cm_bombs ; !WRAM_MENU_START+$86
ram_cm_spring = !ram_cm_spring ; !WRAM_MENU_START+$88
ram_cm_screw = !ram_cm_screw ; !WRAM_MENU_START+$8A
ram_cm_hijump = !ram_cm_hijump ; !WRAM_MENU_START+$8C
ram_cm_space = !ram_cm_space ; !WRAM_MENU_START+$8E
ram_cm_speed = !ram_cm_speed ; !WRAM_MENU_START+$90
ram_cm_charge = !ram_cm_charge ; !WRAM_MENU_START+$92
ram_cm_ice = !ram_cm_ice ; !WRAM_MENU_START+$94
ram_cm_wave = !ram_cm_wave ; !WRAM_MENU_START+$96
ram_cm_spazer = !ram_cm_spazer ; !WRAM_MENU_START+$98
ram_cm_plasma = !ram_cm_plasma ; !WRAM_MENU_START+$9A

ram_cm_custompalette_blue = !ram_cm_custompalette_blue ; !WRAM_MENU_START+$9C
ram_cm_custompalette_green = !ram_cm_custompalette_green ; !WRAM_MENU_START+$9E
ram_cm_custompalette_red = !ram_cm_custompalette_red ; !WRAM_MENU_START+$A0
ram_cm_custompalette = !ram_cm_custompalette ; !WRAM_MENU_START+$A2
ram_cm_dummy_on = !ram_cm_dummy_on ; !WRAM_MENU_START+$A4
ram_cm_dummy_off = !ram_cm_dummy_off ; !WRAM_MENU_START+$A6
ram_cm_dummy_num = !ram_cm_dummy_num ; !WRAM_MENU_START+$A8

ram_cm_manage_slots = !ram_cm_manage_slots ; !WRAM_MENU_START+$AA
ram_cm_selected_slot = !ram_cm_selected_slot ; !WRAM_MENU_START+$AC

; ^ FREE SPACE ^ up to +$B6

ram_cm_keyboard_buffer = !ram_cm_keyboard_buffer ; !WRAM_MENU_START+$B8 ; $18 bytes

; Reserve 48 bytes for CGRAM cache
; Currently first 28 bytes plus last 2 bytes are used
ram_cgram_cache = !ram_cgram_cache ; !WRAM_MENU_START+$D0

; -----
; SRAM
; -----

sram_initialized = !sram_initialized ; !SRAM_START+$00
sram_ctrl_menu = !sram_ctrl_menu ; !SRAM_START+$02
sram_ctrl_load_state = !sram_ctrl_load_state ; !SRAM_START+$04
sram_ctrl_save_state = !sram_ctrl_save_state ; !SRAM_START+$06
sram_ctrl_auto_save_state = !sram_ctrl_auto_save_state ; !SRAM_START+$08
sram_ctrl_save_custom_preset = !sram_ctrl_save_custom_preset ; !SRAM_START+$0A
sram_ctrl_load_custom_preset = !sram_ctrl_load_custom_preset ; !SRAM_START+$0C

sram_rerandomize = !sram_rerandomize ; !SRAM_START+$28
sram_music_toggle = !sram_music_toggle ; !SRAM_START+$2A
sram_healthalarm = !sram_healthalarm ; !SRAM_START+$2C
sram_skip_splash = !sram_skip_splash ; !SRAM_START+$2E
sram_preset_close_doors = !sram_preset_close_doors ; !SRAM_START+$30
sram_custom_preset_slot = !sram_custom_preset_slot ; !SRAM_START+$32
sram_preset_preserve_enemies = !sram_preset_preserve_enemies ; !SRAM_START+$34
sram_sprite_prio_flag = !sram_sprite_prio_flag ; !SRAM_START+$36
sram_custom_header = !sram_custom_header ; !SRAM_START+$38 ; $18 bytes

; do not change order without updating custom palette profiles in customizemenu.asm
sram_palette_border = !sram_palette_border ; !SRAM_START+$5C
sram_palette_headeroutline = !sram_palette_headeroutline ; !SRAM_START+$5E
sram_palette_text = !sram_palette_text ; !SRAM_START+$60
sram_palette_numoutline = !sram_palette_numoutline ; !SRAM_START+$62
sram_palette_numfill = !sram_palette_numfill ; !SRAM_START+$64
sram_palette_toggleon = !sram_palette_toggleon ; !SRAM_START+$66
sram_palette_seltext = !sram_palette_seltext ; !SRAM_START+$68
sram_palette_seltextbg = !sram_palette_seltextbg ; !SRAM_START+$6A
sram_palette_background = !sram_palette_background ; !SRAM_START+$6C
sram_palette_numseloutline = !sram_palette_numseloutline ; !SRAM_START+$6E
sram_palette_numsel = !sram_palette_numsel ; !SRAM_START+$70

sram_custompalette_profile = !sram_custompalette_profile ; !SRAM_START+$72
sram_menu_background = !sram_menu_background ; !SRAM_START+$74
sram_cm_scroll_delay = !sram_cm_scroll_delay ; !SRAM_START+$76

sram_customsfx_move = !sram_customsfx_move ; !SRAM_START+$78
sram_customsfx_toggle = !sram_customsfx_toggle ; !SRAM_START+$7A
sram_customsfx_number = !sram_customsfx_number ; !SRAM_START+$7C
sram_customsfx_confirm = !sram_customsfx_confirm ; !SRAM_START+$7E
sram_customsfx_goback = !sram_customsfx_goback ; !SRAM_START+$80

; ^ FREE SPACE ^ up to +$1FE

sram_custom_preset_names = !sram_custom_preset_names ; !SRAM_START_BANK+$1000 ; $480 bytes
sram_custom_preset_safewords = !sram_custom_preset_safewords ; !SRAM_START_BANK+$1480 ; $60 bytes

; --------------
